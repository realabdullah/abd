[{"data":1,"prerenderedAt":1590},["ShallowReactive",2],{"all-articles":3},[4,416],{"id":5,"title":6,"body":7,"date":407,"description":408,"extension":409,"meta":410,"navigation":322,"path":412,"published":413,"seo":414,"stem":415},"articles/articles/how-to-convert-a-svg-to-png-using-canvas.md","How to convert a SVG to PNG using Canvas",{"type":8,"value":9,"toc":403},"minimal",[10,17,20,30,107,110,115,226,229,234,260,263,272,384,389,392,396,399],[11,12,13],"blockquote",{},[14,15,16],"p",{},"This article was created using ChatGPT and meant as a placeholder",[14,18,19],{},"Converting an SVG to a PNG in JavaScript using a canvas element is a handy technique for web developers who need to manipulate vector graphics for various applications. This process essentially involves rendering an SVG image onto a canvas and then converting the canvas to a PNG format. Here's a step-by-step guide on how to achieve this:",[21,22,23,27],"ol",{},[24,25,26],"li",{},"Prepare the SVG\nEnsure your SVG code is ready. You can use an SVG file or an SVG string embedded directly in your JavaScript code. If you're using an external SVG file, you'll need to load it into your application.",[24,28,29],{},"Create a Canvas Element\nYou need a canvas element to draw your SVG onto. This can be an existing canvas in your HTML or one created dynamically using JavaScript:",[31,32,37],"pre",{"className":33,"code":34,"language":35,"meta":36,"style":36},"language-js shiki shiki-themes github-light github-dark","let canvas = document.createElement(\"canvas\");\ncanvas.width = 500; // Set the canvas width\ncanvas.height = 500; // Set the canvas height\n","js","",[38,39,40,73,92],"code",{"__ignoreMap":36},[41,42,45,49,53,56,59,63,66,70],"span",{"class":43,"line":44},"line",1,[41,46,48],{"class":47},"scLti","let",[41,50,52],{"class":51},"sWKip"," canvas ",[41,54,55],{"class":47},"=",[41,57,58],{"class":51}," document.",[41,60,62],{"class":61},"sDUX4","createElement",[41,64,65],{"class":51},"(",[41,67,69],{"class":68},"sHTXl","\"canvas\"",[41,71,72],{"class":51},");\n",[41,74,76,79,81,85,88],{"class":43,"line":75},2,[41,77,78],{"class":51},"canvas.width ",[41,80,55],{"class":47},[41,82,84],{"class":83},"swLay"," 500",[41,86,87],{"class":51},"; ",[41,89,91],{"class":90},"sKA9v","// Set the canvas width\n",[41,93,95,98,100,102,104],{"class":43,"line":94},3,[41,96,97],{"class":51},"canvas.height ",[41,99,55],{"class":47},[41,101,84],{"class":83},[41,103,87],{"class":51},[41,105,106],{"class":90},"// Set the canvas height\n",[14,108,109],{},"Set the width and height of the canvas to match the desired dimensions of your final PNG.",[21,111,112],{"start":94},[24,113,114],{},"Draw the SVG onto the Canvas\nTo draw the SVG onto the canvas, you need to convert the SVG into an image and then draw that image on the canvas. This can be done using the Image object in JavaScript:",[31,116,118],{"className":33,"code":117,"language":35,"meta":36,"style":36},"let img = new Image();\nimg.onload = function () {\n  let ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0);\n};\nimg.src = \"data:image/svg+xml;base64,\" + btoa(svgString);\n",[38,119,120,138,155,178,200,206],{"__ignoreMap":36},[41,121,122,124,127,129,132,135],{"class":43,"line":44},[41,123,48],{"class":47},[41,125,126],{"class":51}," img ",[41,128,55],{"class":47},[41,130,131],{"class":47}," new",[41,133,134],{"class":61}," Image",[41,136,137],{"class":51},"();\n",[41,139,140,143,146,149,152],{"class":43,"line":75},[41,141,142],{"class":51},"img.",[41,144,145],{"class":61},"onload",[41,147,148],{"class":47}," =",[41,150,151],{"class":47}," function",[41,153,154],{"class":51}," () {\n",[41,156,157,160,163,165,168,171,173,176],{"class":43,"line":94},[41,158,159],{"class":47},"  let",[41,161,162],{"class":51}," ctx ",[41,164,55],{"class":47},[41,166,167],{"class":51}," canvas.",[41,169,170],{"class":61},"getContext",[41,172,65],{"class":51},[41,174,175],{"class":68},"\"2d\"",[41,177,72],{"class":51},[41,179,181,184,187,190,193,196,198],{"class":43,"line":180},4,[41,182,183],{"class":51},"  ctx.",[41,185,186],{"class":61},"drawImage",[41,188,189],{"class":51},"(img, ",[41,191,192],{"class":83},"0",[41,194,195],{"class":51},", ",[41,197,192],{"class":83},[41,199,72],{"class":51},[41,201,203],{"class":43,"line":202},5,[41,204,205],{"class":51},"};\n",[41,207,209,212,214,217,220,223],{"class":43,"line":208},6,[41,210,211],{"class":51},"img.src ",[41,213,55],{"class":47},[41,215,216],{"class":68}," \"data:image/svg+xml;base64,\"",[41,218,219],{"class":47}," +",[41,221,222],{"class":61}," btoa",[41,224,225],{"class":51},"(svgString);\n",[14,227,228],{},"In this code, replace svgString with your SVG code. If you're using an external SVG file, ensure the file is read and converted into a base64 string.",[21,230,231],{"start":180},[24,232,233],{},"Convert Canvas to PNG\nOnce your SVG is rendered on the canvas, you can convert the canvas to a PNG image:",[31,235,237],{"className":33,"code":236,"language":35,"meta":36,"style":36},"let pngUrl = canvas.toDataURL(\"image/png\");\n",[38,238,239],{"__ignoreMap":36},[41,240,241,243,246,248,250,253,255,258],{"class":43,"line":44},[41,242,48],{"class":47},[41,244,245],{"class":51}," pngUrl ",[41,247,55],{"class":47},[41,249,167],{"class":51},[41,251,252],{"class":61},"toDataURL",[41,254,65],{"class":51},[41,256,257],{"class":68},"\"image/png\"",[41,259,72],{"class":51},[14,261,262],{},"This pngUrl is a base64 encoded string representing your PNG image.",[21,264,265],{"start":202},[24,266,267,268,271],{},"Use or Save the PNG Image\nNow that you have your PNG in base64 format, you can use it as needed in your application. For example, you can display it in an ",[269,270],"img",{}," element or download it:",[31,273,275],{"className":33,"code":274,"language":35,"meta":36,"style":36},"let imgElement = document.createElement(\"img\");\nimgElement.src = pngUrl;\ndocument.body.appendChild(imgElement);\n\n// To download the image\nlet downloadLink = document.createElement(\"a\");\ndownloadLink.href = pngUrl;\ndownloadLink.download = \"image.png\";\ndownloadLink.click();\n",[38,276,277,297,307,318,324,329,349,359,373],{"__ignoreMap":36},[41,278,279,281,284,286,288,290,292,295],{"class":43,"line":44},[41,280,48],{"class":47},[41,282,283],{"class":51}," imgElement ",[41,285,55],{"class":47},[41,287,58],{"class":51},[41,289,62],{"class":61},[41,291,65],{"class":51},[41,293,294],{"class":68},"\"img\"",[41,296,72],{"class":51},[41,298,299,302,304],{"class":43,"line":75},[41,300,301],{"class":51},"imgElement.src ",[41,303,55],{"class":47},[41,305,306],{"class":51}," pngUrl;\n",[41,308,309,312,315],{"class":43,"line":94},[41,310,311],{"class":51},"document.body.",[41,313,314],{"class":61},"appendChild",[41,316,317],{"class":51},"(imgElement);\n",[41,319,320],{"class":43,"line":180},[41,321,323],{"emptyLinePlaceholder":322},true,"\n",[41,325,326],{"class":43,"line":202},[41,327,328],{"class":90},"// To download the image\n",[41,330,331,333,336,338,340,342,344,347],{"class":43,"line":208},[41,332,48],{"class":47},[41,334,335],{"class":51}," downloadLink ",[41,337,55],{"class":47},[41,339,58],{"class":51},[41,341,62],{"class":61},[41,343,65],{"class":51},[41,345,346],{"class":68},"\"a\"",[41,348,72],{"class":51},[41,350,352,355,357],{"class":43,"line":351},7,[41,353,354],{"class":51},"downloadLink.href ",[41,356,55],{"class":47},[41,358,306],{"class":51},[41,360,362,365,367,370],{"class":43,"line":361},8,[41,363,364],{"class":51},"downloadLink.download ",[41,366,55],{"class":47},[41,368,369],{"class":68}," \"image.png\"",[41,371,372],{"class":51},";\n",[41,374,376,379,382],{"class":43,"line":375},9,[41,377,378],{"class":51},"downloadLink.",[41,380,381],{"class":61},"click",[41,383,137],{"class":51},[385,386,388],"h3",{"id":387},"additional-considerations","Additional Considerations",[14,390,391],{},"Cross-Origin Issues: If you're loading an SVG from an external source, you may encounter cross-origin issues. Ensure CORS policies are configured correctly on the server hosting the SVG file.\nSVG Features: Some SVG features may not render correctly on canvas, so test your SVGs thoroughly.\nPerformance: For large SVG files, consider the performance implications of this conversion process.",[385,393,395],{"id":394},"conclusion","Conclusion",[14,397,398],{},"Converting SVG to PNG using JavaScript and canvas is a powerful technique that can be integrated into web applications for dynamic image manipulation. By following these steps, developers can effectively translate the versatility of SVGs into the wide compatibility of PNGs.",[400,401,402],"style",{},"html pre.shiki code .scLti, html code.shiki .scLti{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sWKip, html code.shiki .sWKip{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sDUX4, html code.shiki .sDUX4{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sHTXl, html code.shiki .sHTXl{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .swLay, html code.shiki .swLay{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sKA9v, html code.shiki .sKA9v{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":36,"searchDepth":75,"depth":75,"links":404},[405,406],{"id":387,"depth":94,"text":388},{"id":394,"depth":94,"text":395},null,"A simple way to convert a SVG to PNG using Canvas","md",{"slug":411},"how-to-convert-a-svg-to-png-using-canvas","/articles/how-to-convert-a-svg-to-png-using-canvas","2023-11-22T00:00:00.000Z",{"title":6,"description":408},"articles/how-to-convert-a-svg-to-png-using-canvas",{"id":417,"title":418,"body":419,"date":407,"description":1583,"extension":409,"meta":1584,"navigation":322,"path":1586,"published":1587,"seo":1588,"stem":1589},"articles/articles/sending-email-from-your-nuxt-3-app-with-mailgun.md","Sending email from your Nuxt 3 app with Mailgun",{"type":8,"value":420,"toc":1581},[421,424,427,551,554,564,908,927,930,933,1007,1010,1082,1102,1200,1215,1218,1245,1262,1268,1285,1312,1344,1575,1578],[14,422,423],{},"Have you found yourself in a situation where you needed to send emails from your Nuxt application? With Nuxt's server and Mailgun, sending emails directly from your Nuxt 3 app becomes a breeze.",[14,425,426],{},"To get started, create a Nuxt 3 app using the following command. Ensure that you have Node.js version 16 or newer installed, along with a text editor and a terminal for running these commands:",[31,428,432],{"className":429,"code":430,"language":431,"meta":36,"style":36},"language-bash shiki shiki-themes github-light github-dark","npx nuxi@latest init my-app\n\n# select preferred package manager\nafter the selection, the necessary dependencies will be installed\n\n# initialize git repository\nyou'll be prompted to initialize a git respository or not\n\n# navigate into your newly created project\ncd my-app\n\n# open with vscode\ncode .\n\n# start the server\nyarn dev or npm run dev\n","bash",[38,433,434,448,452,457,485,489,494,502,506,511,517,522,528,534,539,545],{"__ignoreMap":36},[41,435,436,439,442,445],{"class":43,"line":44},[41,437,438],{"class":61},"npx",[41,440,441],{"class":68}," nuxi@latest",[41,443,444],{"class":68}," init",[41,446,447],{"class":68}," my-app\n",[41,449,450],{"class":43,"line":75},[41,451,323],{"emptyLinePlaceholder":322},[41,453,454],{"class":43,"line":94},[41,455,456],{"class":90},"# select preferred package manager\n",[41,458,459,462,465,468,470,473,476,479,482],{"class":43,"line":180},[41,460,461],{"class":61},"after",[41,463,464],{"class":68}," the",[41,466,467],{"class":68}," selection,",[41,469,464],{"class":68},[41,471,472],{"class":68}," necessary",[41,474,475],{"class":68}," dependencies",[41,477,478],{"class":68}," will",[41,480,481],{"class":68}," be",[41,483,484],{"class":68}," installed\n",[41,486,487],{"class":43,"line":202},[41,488,323],{"emptyLinePlaceholder":322},[41,490,491],{"class":43,"line":208},[41,492,493],{"class":90},"# initialize git repository\n",[41,495,496,499],{"class":43,"line":351},[41,497,498],{"class":61},"you",[41,500,501],{"class":61},"'ll be prompted to initialize a git respository or not\n",[41,503,504],{"class":43,"line":361},[41,505,323],{"emptyLinePlaceholder":322},[41,507,508],{"class":43,"line":375},[41,509,510],{"class":61},"# navigate into your newly created project\n",[41,512,514],{"class":43,"line":513},10,[41,515,516],{"class":61},"cd my-app\n",[41,518,520],{"class":43,"line":519},11,[41,521,323],{"emptyLinePlaceholder":322},[41,523,525],{"class":43,"line":524},12,[41,526,527],{"class":61},"# open with vscode\n",[41,529,531],{"class":43,"line":530},13,[41,532,533],{"class":61},"code .\n",[41,535,537],{"class":43,"line":536},14,[41,538,323],{"emptyLinePlaceholder":322},[41,540,542],{"class":43,"line":541},15,[41,543,544],{"class":61},"# start the server\n",[41,546,548],{"class":43,"line":547},16,[41,549,550],{"class":61},"yarn dev or npm run dev\n",[14,552,553],{},"Now that our application is up and running, in this tutorial, we'll implement a straightforward sign-up process and send a welcome email to new users upon successful registration. To achieve this, we'll create a signup form where users can enter their information and submit it.",[14,555,556,557,560,561,563],{},"For this tutorial, we will work with the ",[38,558,559],{},"app.vue"," file in our application. First, let's clean up the content of ",[38,562,559],{},". Within this file, we will define a reactive form state to store the data entered by the user. We will also create and style a basic form to gather user inputs.",[31,565,569],{"className":566,"code":567,"language":568,"meta":36,"style":36},"language-svelte shiki shiki-themes github-light github-dark","\u003Cscript lang=\"ts\" setup>\nconst form = reactive({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n});\n\nconst handleSubmission = () => {\n    console.log(form);\n    alert(\"Sign up successful!\");\n};\n\u003C/script>\n\n\u003Ctemplate>\n    \u003Cform @submit.prevent=\"handleSubmission\">\n        \u003Clabel for=\"name\">\n            Name\n            \u003Cinput v-model=\"form.name\" id=\"name\" type=\"text\" placeholder=\"Enter your name\" required />\n        \u003C/label>\n        \u003Clabel for=\"email\">\n            Email\n            \u003Cinput v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required />\n        \u003C/label>\n        \u003Clabel for=\"password\">\n            Password\n            \u003Cinput  v-model=\"form.password\" id=\"password\" type=\"password\" placeholder=\"Enter your password\" required />\n        \u003C/label>\n        \u003Cbutton type=\"submit\">Sign up\u003C/button>\n    \u003C/form>\n\u003C/template>\n\n\u003Cstyle scoped>\nform {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n    max-width: 400px;\n    margin: 0 auto;\n    margin-top: 30px;\n}\n\nform label input {\n    box-sizing: border-box;\n    width: 100%;\n    margin-top: 10px;\n    margin-bottom: 15px;\n    padding: 15px;\n    border: 1px solid #333333;\n    border-radius: 10px;\n}\n\nform button {\n    width: 100%;\n    padding: 15px;\n    background: #333333;\n    color: #FFFFFF;\n    border: none;\n}\n\u003C/style>\n","svelte",[38,570,571,576,581,586,591,596,601,605,610,615,620,624,629,633,638,643,648,654,660,666,672,678,684,689,695,701,707,712,718,724,730,735,741,747,753,759,765,771,777,783,789,795,801,806,812,818,823,829,835,841,847,853,858,863,869,874,879,885,891,897,902],{"__ignoreMap":36},[41,572,573],{"class":43,"line":44},[41,574,575],{},"\u003Cscript lang=\"ts\" setup>\n",[41,577,578],{"class":43,"line":75},[41,579,580],{},"const form = reactive({\n",[41,582,583],{"class":43,"line":94},[41,584,585],{},"    name: \"\",\n",[41,587,588],{"class":43,"line":180},[41,589,590],{},"    email: \"\",\n",[41,592,593],{"class":43,"line":202},[41,594,595],{},"    password: \"\",\n",[41,597,598],{"class":43,"line":208},[41,599,600],{},"});\n",[41,602,603],{"class":43,"line":351},[41,604,323],{"emptyLinePlaceholder":322},[41,606,607],{"class":43,"line":361},[41,608,609],{},"const handleSubmission = () => {\n",[41,611,612],{"class":43,"line":375},[41,613,614],{},"    console.log(form);\n",[41,616,617],{"class":43,"line":513},[41,618,619],{},"    alert(\"Sign up successful!\");\n",[41,621,622],{"class":43,"line":519},[41,623,205],{},[41,625,626],{"class":43,"line":524},[41,627,628],{},"\u003C/script>\n",[41,630,631],{"class":43,"line":530},[41,632,323],{"emptyLinePlaceholder":322},[41,634,635],{"class":43,"line":536},[41,636,637],{},"\u003Ctemplate>\n",[41,639,640],{"class":43,"line":541},[41,641,642],{},"    \u003Cform @submit.prevent=\"handleSubmission\">\n",[41,644,645],{"class":43,"line":547},[41,646,647],{},"        \u003Clabel for=\"name\">\n",[41,649,651],{"class":43,"line":650},17,[41,652,653],{},"            Name\n",[41,655,657],{"class":43,"line":656},18,[41,658,659],{},"            \u003Cinput v-model=\"form.name\" id=\"name\" type=\"text\" placeholder=\"Enter your name\" required />\n",[41,661,663],{"class":43,"line":662},19,[41,664,665],{},"        \u003C/label>\n",[41,667,669],{"class":43,"line":668},20,[41,670,671],{},"        \u003Clabel for=\"email\">\n",[41,673,675],{"class":43,"line":674},21,[41,676,677],{},"            Email\n",[41,679,681],{"class":43,"line":680},22,[41,682,683],{},"            \u003Cinput v-model=\"form.email\" id=\"email\" type=\"email\" placeholder=\"Enter your email\" required />\n",[41,685,687],{"class":43,"line":686},23,[41,688,665],{},[41,690,692],{"class":43,"line":691},24,[41,693,694],{},"        \u003Clabel for=\"password\">\n",[41,696,698],{"class":43,"line":697},25,[41,699,700],{},"            Password\n",[41,702,704],{"class":43,"line":703},26,[41,705,706],{},"            \u003Cinput  v-model=\"form.password\" id=\"password\" type=\"password\" placeholder=\"Enter your password\" required />\n",[41,708,710],{"class":43,"line":709},27,[41,711,665],{},[41,713,715],{"class":43,"line":714},28,[41,716,717],{},"        \u003Cbutton type=\"submit\">Sign up\u003C/button>\n",[41,719,721],{"class":43,"line":720},29,[41,722,723],{},"    \u003C/form>\n",[41,725,727],{"class":43,"line":726},30,[41,728,729],{},"\u003C/template>\n",[41,731,733],{"class":43,"line":732},31,[41,734,323],{"emptyLinePlaceholder":322},[41,736,738],{"class":43,"line":737},32,[41,739,740],{},"\u003Cstyle scoped>\n",[41,742,744],{"class":43,"line":743},33,[41,745,746],{},"form {\n",[41,748,750],{"class":43,"line":749},34,[41,751,752],{},"    padding: 20px;\n",[41,754,756],{"class":43,"line":755},35,[41,757,758],{},"    display: flex;\n",[41,760,762],{"class":43,"line":761},36,[41,763,764],{},"    flex-direction: column;\n",[41,766,768],{"class":43,"line":767},37,[41,769,770],{},"    gap: 10px;\n",[41,772,774],{"class":43,"line":773},38,[41,775,776],{},"    width: 100%;\n",[41,778,780],{"class":43,"line":779},39,[41,781,782],{},"    max-width: 400px;\n",[41,784,786],{"class":43,"line":785},40,[41,787,788],{},"    margin: 0 auto;\n",[41,790,792],{"class":43,"line":791},41,[41,793,794],{},"    margin-top: 30px;\n",[41,796,798],{"class":43,"line":797},42,[41,799,800],{},"}\n",[41,802,804],{"class":43,"line":803},43,[41,805,323],{"emptyLinePlaceholder":322},[41,807,809],{"class":43,"line":808},44,[41,810,811],{},"form label input {\n",[41,813,815],{"class":43,"line":814},45,[41,816,817],{},"    box-sizing: border-box;\n",[41,819,821],{"class":43,"line":820},46,[41,822,776],{},[41,824,826],{"class":43,"line":825},47,[41,827,828],{},"    margin-top: 10px;\n",[41,830,832],{"class":43,"line":831},48,[41,833,834],{},"    margin-bottom: 15px;\n",[41,836,838],{"class":43,"line":837},49,[41,839,840],{},"    padding: 15px;\n",[41,842,844],{"class":43,"line":843},50,[41,845,846],{},"    border: 1px solid #333333;\n",[41,848,850],{"class":43,"line":849},51,[41,851,852],{},"    border-radius: 10px;\n",[41,854,856],{"class":43,"line":855},52,[41,857,800],{},[41,859,861],{"class":43,"line":860},53,[41,862,323],{"emptyLinePlaceholder":322},[41,864,866],{"class":43,"line":865},54,[41,867,868],{},"form button {\n",[41,870,872],{"class":43,"line":871},55,[41,873,776],{},[41,875,877],{"class":43,"line":876},56,[41,878,840],{},[41,880,882],{"class":43,"line":881},57,[41,883,884],{},"    background: #333333;\n",[41,886,888],{"class":43,"line":887},58,[41,889,890],{},"    color: #FFFFFF;\n",[41,892,894],{"class":43,"line":893},59,[41,895,896],{},"    border: none;\n",[41,898,900],{"class":43,"line":899},60,[41,901,800],{},[41,903,905],{"class":43,"line":904},61,[41,906,907],{},"\u003C/style>\n",[14,909,910,911,914,915,918,919,922,923,926],{},"In the code block above, we declared a reactive ",[38,912,913],{},"form"," state to store user inputs. Additionally, we designed a basic form to collect the user's name, email, and password. Each input field is binded to a ",[38,916,917],{},"v-model"," to ensure the form data is synchronized with the state. We've also defined a function to handle the form submission, and this function is attached to the form element using the ",[38,920,921],{},"@submit.prevent"," directive. The ",[38,924,925],{},"prevent"," modifier is used to prevent the page from reloading when the form is submitted. You can customize the submission handling according to your specific needs, such as sending the data to a server. However, for this tutorial, we will keep it simple and only log the data to the console and display an alert.",[14,928,929],{},"Now, if you fill out the form and click the \"Sign up\" button, your form details will be logged to the console, and an alert dialog will appear, displaying a success message.",[14,931,932],{},"To send an email to the user's email after a successful signup, we will use Nuxt 3's server directory to create an API endpoint. This endpoint will handle email sending. Follow these steps:",[934,935,936,947,969,979,993],"ul",{},[24,937,938,939,942,943,946],{},"Create an ",[38,940,941],{},"api"," folder inside the ",[38,944,945],{},"server"," folder at the root of the application.",[24,948,949,950,952,953,956,957,960,961,964,965,968],{},"In Nuxt 3, to create an API endpoint, you create a new file in the ",[38,951,941],{}," folder with the method attached to the name of the file. For instance, if you want to create a ",[38,954,955],{},"GET"," endpoint named \"hello,\" you would create a file named ",[38,958,959],{},"hello.get.ts"," if you're using TypeScript or ",[38,962,963],{},"hello.get.js"," if you're using JavaScript. In this case, we're creating an email endpoint with the ",[38,966,967],{},"POST"," method since we're sending data.",[24,970,971,972,975,976,978],{},"Create a file named ",[38,973,974],{},"email.post.ts"," in the ",[38,977,941],{}," folder.",[24,980,981,982,984,985,988,989,992],{},"In the ",[38,983,974],{}," endpoint file, we'll export a default function defined with ",[38,986,987],{},"defineEventHandler()",". This function will be an asynchronous arrow function that defines the event handler. It'll have an ",[38,990,991],{},"event"," object as its argument, which represents an incoming event or request.",[24,994,995,996,999,1000,1003,1004,1006],{},"We'll asynchronously read the body content of the event by calling a ",[38,997,998],{},"readBody"," function. Then we assign the content of the event's body to a ",[38,1001,1002],{},"body"," variable. This ",[38,1005,1002],{}," variable will contain the data that we receive in the request body.",[14,1008,1009],{},"This endpoint we just created will eventually be responsible for processing the data from our sign-up form and sending an email to the user's email address.",[31,1011,1015],{"className":1012,"code":1013,"language":1014,"meta":36,"style":36},"language-typescript shiki shiki-themes github-light github-dark","export default defineEventHandler(async (event) => {\n    const body = await readBody(event);\n    console.log(body);\n});\n","typescript",[38,1016,1017,1048,1067,1078],{"__ignoreMap":36},[41,1018,1019,1022,1025,1028,1030,1033,1036,1039,1042,1045],{"class":43,"line":44},[41,1020,1021],{"class":47},"export",[41,1023,1024],{"class":47}," default",[41,1026,1027],{"class":61}," defineEventHandler",[41,1029,65],{"class":51},[41,1031,1032],{"class":47},"async",[41,1034,1035],{"class":51}," (",[41,1037,991],{"class":1038},"sf26o",[41,1040,1041],{"class":51},") ",[41,1043,1044],{"class":47},"=>",[41,1046,1047],{"class":51}," {\n",[41,1049,1050,1053,1056,1058,1061,1064],{"class":43,"line":75},[41,1051,1052],{"class":47},"    const",[41,1054,1055],{"class":83}," body",[41,1057,148],{"class":47},[41,1059,1060],{"class":47}," await",[41,1062,1063],{"class":61}," readBody",[41,1065,1066],{"class":51},"(event);\n",[41,1068,1069,1072,1075],{"class":43,"line":94},[41,1070,1071],{"class":51},"    console.",[41,1073,1074],{"class":61},"log",[41,1076,1077],{"class":51},"(body);\n",[41,1079,1080],{"class":43,"line":180},[41,1081,600],{"class":51},[14,1083,1084,1085,1088,1089,1091,1092,1094,1095,1097,1098,1101],{},"Now that we have created an API endpoint accessible at ",[38,1086,1087],{},"/api/email",", let's test it by returning to ",[38,1090,559],{},". In this step, we will make a ",[38,1093,967],{}," request to the endpoint using the ",[38,1096,913],{},"'s email and name state as the request body. To make this request, we'll utilize ",[38,1099,1100],{},"useFetch",", which is a composable provided by Nuxt.",[31,1103,1105],{"className":566,"code":1104,"language":568,"meta":36,"style":36},"\u003Cscript lang=\"ts\" setup>\nconst form = reactive({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n});\n\nconst handleSubmission = async () => {\n    await useFetch(\"/api/email\", {\n        method: \"POST\",\n        body: {\n            name: form.name,\n            email: form.email,\n        },\n    });\n    console.log(form);\n    alert(\"Sign up successful!\");\n};\n\u003C/script>\n\n// rest of the code......\n",[38,1106,1107,1111,1115,1119,1123,1127,1131,1135,1140,1145,1150,1155,1160,1165,1170,1175,1179,1183,1187,1191,1195],{"__ignoreMap":36},[41,1108,1109],{"class":43,"line":44},[41,1110,575],{},[41,1112,1113],{"class":43,"line":75},[41,1114,580],{},[41,1116,1117],{"class":43,"line":94},[41,1118,585],{},[41,1120,1121],{"class":43,"line":180},[41,1122,590],{},[41,1124,1125],{"class":43,"line":202},[41,1126,595],{},[41,1128,1129],{"class":43,"line":208},[41,1130,600],{},[41,1132,1133],{"class":43,"line":351},[41,1134,323],{"emptyLinePlaceholder":322},[41,1136,1137],{"class":43,"line":361},[41,1138,1139],{},"const handleSubmission = async () => {\n",[41,1141,1142],{"class":43,"line":375},[41,1143,1144],{},"    await useFetch(\"/api/email\", {\n",[41,1146,1147],{"class":43,"line":513},[41,1148,1149],{},"        method: \"POST\",\n",[41,1151,1152],{"class":43,"line":519},[41,1153,1154],{},"        body: {\n",[41,1156,1157],{"class":43,"line":524},[41,1158,1159],{},"            name: form.name,\n",[41,1161,1162],{"class":43,"line":530},[41,1163,1164],{},"            email: form.email,\n",[41,1166,1167],{"class":43,"line":536},[41,1168,1169],{},"        },\n",[41,1171,1172],{"class":43,"line":541},[41,1173,1174],{},"    });\n",[41,1176,1177],{"class":43,"line":547},[41,1178,614],{},[41,1180,1181],{"class":43,"line":650},[41,1182,619],{},[41,1184,1185],{"class":43,"line":656},[41,1186,205],{},[41,1188,1189],{"class":43,"line":662},[41,1190,628],{},[41,1192,1193],{"class":43,"line":668},[41,1194,323],{"emptyLinePlaceholder":322},[41,1196,1197],{"class":43,"line":674},[41,1198,1199],{},"// rest of the code......\n",[14,1201,1202,1203,1206,1207,1214],{},"Upon submitting the form, you will notice that the name and email are logged to the terminal. Now, let's proceed to send an email to the user's provided email address. To do this, we need to install ",[38,1204,1205],{},"mailgun.js"," since we will be using Mailgun for sending our emails. If you haven't already, you can create an account with ",[1208,1209,1213],"a",{"href":1210,"rel":1211},"https://signup.mailgun.com/new/signup",[1212],"nofollow","Mailgun"," to get started with their email services.",[14,1216,1217],{},"In this tutorial, we will utilize Mailgun's sandbox domain, which has limitations allowing only authorized email addresses to receive emails. If you wish to send emails to all user email addresses and also connect your domain, consider upgrading your Mailgun account.",[934,1219,1220,1229,1236],{},[24,1221,1222,1223,1228],{},"Visit your ",[1208,1224,1227],{"href":1225,"rel":1226},"https://app.mailgun.com/app/sending/domains",[1212],"Mailgun dashboard"," to copy the domain associated with your Sandbox account.",[24,1230,1231,1232,1235],{},"We then create a ",[38,1233,1234],{},".env"," file in the root of our application and paste the copied domain into it.",[24,1237,1238,1239,1244],{},"To send emails from our application, we'll need an API key from Mailgun. You can create an API key by following this ",[1208,1240,1243],{"href":1241,"rel":1242},"https://app.mailgun.com/settings/api_security",[1212],"link",".",[31,1246,1250],{"className":1247,"code":1248,"language":1249,"meta":36,"style":36},"language-plaintext shiki shiki-themes github-light github-dark","MAILGUN_DOMAIN=sandboxxxxxxxxxxxxxxxxxxxxxc.mailgun.org\nMAILGUN_API_KEY=f23xxxxxxxxxxxxxxxxxxx-xxxxx-xxxxxx\n","plaintext",[38,1251,1252,1257],{"__ignoreMap":36},[41,1253,1254],{"class":43,"line":44},[41,1255,1256],{},"MAILGUN_DOMAIN=sandboxxxxxxxxxxxxxxxxxxxxxc.mailgun.org\n",[41,1258,1259],{"class":43,"line":75},[41,1260,1261],{},"MAILGUN_API_KEY=f23xxxxxxxxxxxxxxxxxxx-xxxxx-xxxxxx\n",[14,1263,1264,1265,1267],{},"Next, we'll need to install ",[38,1266,1205],{}," to handle the email-sending process.",[31,1269,1273],{"className":1270,"code":1271,"language":1272,"meta":36,"style":36},"language-markdown shiki shiki-themes github-light github-dark","# Install mailgun.js\nnpm i mailgun.js or yarn add mailgun.js\n","markdown",[38,1274,1275,1280],{"__ignoreMap":36},[41,1276,1277],{"class":43,"line":44},[41,1278,1279],{},"# Install mailgun.js\n",[41,1281,1282],{"class":43,"line":75},[41,1283,1284],{},"npm i mailgun.js or yarn add mailgun.js\n",[14,1286,1287,1288,1291,1292,1295,1296,1298,1299,1301,1302,1304,1305,1307,1308,1311],{},"In the endpoint file, we will begin by importing ",[38,1289,1290],{},"formData"," from the ",[38,1293,1294],{},"form-data"," package in Node.js, as well as ",[38,1297,1213],{}," from ",[38,1300,1205],{},". After the imports, we'll instantiate a Mailgun client by creating a new instance of ",[38,1303,1213],{}," and passing ",[38,1306,1290],{}," as an argument. Then, using the ",[38,1309,1310],{},"mailgun.client"," method, we will set up the client with basic authentication credentials, which include the username as 'api' and the API key. The configured client will be assigned to a variable.",[14,1313,1314,1315,1318,1319,1322,1323,1326,1327,1330,1331,1334,1335,1337,1338,1340,1341,1343],{},"Following that, we will create a ",[38,1316,1317],{},"data"," object that includes the properties to be sent in the email, such as the sender (",[38,1320,1321],{},"from","), recipient (",[38,1324,1325],{},"to","), the subject, and the body of the email. Subsequently, we will call the ",[38,1328,1329],{},"create"," method of the ",[38,1332,1333],{},"message"," object within the ",[38,1336,1310],{}," that we assigned to a variable earlier. The ",[38,1339,1329],{}," method will receive the domain and the ",[38,1342,1317],{}," object as its arguments.",[31,1345,1347],{"className":1012,"code":1346,"language":1014,"meta":36,"style":36},"import formData from \"form-data\";\nimport Mailgun from \"mailgun.js\";\n\nexport default defineEventHandler(async (event) => {\n    const body = await readBody(event);\n    \n    const mailgun = new Mailgun(formData);\n    const mg = mailgun.client({\n        username: \"api\",\n        key: process.env.MAILGUN_API_KEY,\n    });\n\n    const data = {\n        from: \"User \u003Cadmin@test.test>\",\n        to: body.email,\n        subject: \"Welcome to test app!\",\n        text: `Hi ${body.name}! Welcome to our test app! We're glad to have you onBoard!.`,\n    };\n\n    await mg.messages.create(process.env.MAILGUN_DOMAIN, data);\n});\n",[38,1348,1349,1364,1378,1382,1404,1418,1423,1440,1458,1469,1479,1483,1487,1498,1508,1513,1523,1543,1548,1552,1571],{"__ignoreMap":36},[41,1350,1351,1354,1357,1359,1362],{"class":43,"line":44},[41,1352,1353],{"class":47},"import",[41,1355,1356],{"class":51}," formData ",[41,1358,1321],{"class":47},[41,1360,1361],{"class":68}," \"form-data\"",[41,1363,372],{"class":51},[41,1365,1366,1368,1371,1373,1376],{"class":43,"line":75},[41,1367,1353],{"class":47},[41,1369,1370],{"class":51}," Mailgun ",[41,1372,1321],{"class":47},[41,1374,1375],{"class":68}," \"mailgun.js\"",[41,1377,372],{"class":51},[41,1379,1380],{"class":43,"line":94},[41,1381,323],{"emptyLinePlaceholder":322},[41,1383,1384,1386,1388,1390,1392,1394,1396,1398,1400,1402],{"class":43,"line":180},[41,1385,1021],{"class":47},[41,1387,1024],{"class":47},[41,1389,1027],{"class":61},[41,1391,65],{"class":51},[41,1393,1032],{"class":47},[41,1395,1035],{"class":51},[41,1397,991],{"class":1038},[41,1399,1041],{"class":51},[41,1401,1044],{"class":47},[41,1403,1047],{"class":51},[41,1405,1406,1408,1410,1412,1414,1416],{"class":43,"line":202},[41,1407,1052],{"class":47},[41,1409,1055],{"class":83},[41,1411,148],{"class":47},[41,1413,1060],{"class":47},[41,1415,1063],{"class":61},[41,1417,1066],{"class":51},[41,1419,1420],{"class":43,"line":208},[41,1421,1422],{"class":51},"    \n",[41,1424,1425,1427,1430,1432,1434,1437],{"class":43,"line":351},[41,1426,1052],{"class":47},[41,1428,1429],{"class":83}," mailgun",[41,1431,148],{"class":47},[41,1433,131],{"class":47},[41,1435,1436],{"class":61}," Mailgun",[41,1438,1439],{"class":51},"(formData);\n",[41,1441,1442,1444,1447,1449,1452,1455],{"class":43,"line":361},[41,1443,1052],{"class":47},[41,1445,1446],{"class":83}," mg",[41,1448,148],{"class":47},[41,1450,1451],{"class":51}," mailgun.",[41,1453,1454],{"class":61},"client",[41,1456,1457],{"class":51},"({\n",[41,1459,1460,1463,1466],{"class":43,"line":375},[41,1461,1462],{"class":51},"        username: ",[41,1464,1465],{"class":68},"\"api\"",[41,1467,1468],{"class":51},",\n",[41,1470,1471,1474,1477],{"class":43,"line":513},[41,1472,1473],{"class":51},"        key: process.env.",[41,1475,1476],{"class":83},"MAILGUN_API_KEY",[41,1478,1468],{"class":51},[41,1480,1481],{"class":43,"line":519},[41,1482,1174],{"class":51},[41,1484,1485],{"class":43,"line":524},[41,1486,323],{"emptyLinePlaceholder":322},[41,1488,1489,1491,1494,1496],{"class":43,"line":530},[41,1490,1052],{"class":47},[41,1492,1493],{"class":83}," data",[41,1495,148],{"class":47},[41,1497,1047],{"class":51},[41,1499,1500,1503,1506],{"class":43,"line":536},[41,1501,1502],{"class":51},"        from: ",[41,1504,1505],{"class":68},"\"User \u003Cadmin@test.test>\"",[41,1507,1468],{"class":51},[41,1509,1510],{"class":43,"line":541},[41,1511,1512],{"class":51},"        to: body.email,\n",[41,1514,1515,1518,1521],{"class":43,"line":547},[41,1516,1517],{"class":51},"        subject: ",[41,1519,1520],{"class":68},"\"Welcome to test app!\"",[41,1522,1468],{"class":51},[41,1524,1525,1528,1531,1533,1535,1538,1541],{"class":43,"line":650},[41,1526,1527],{"class":51},"        text: ",[41,1529,1530],{"class":68},"`Hi ${",[41,1532,1002],{"class":51},[41,1534,1244],{"class":68},[41,1536,1537],{"class":51},"name",[41,1539,1540],{"class":68},"}! Welcome to our test app! We're glad to have you onBoard!.`",[41,1542,1468],{"class":51},[41,1544,1545],{"class":43,"line":656},[41,1546,1547],{"class":51},"    };\n",[41,1549,1550],{"class":43,"line":662},[41,1551,323],{"emptyLinePlaceholder":322},[41,1553,1554,1557,1560,1562,1565,1568],{"class":43,"line":668},[41,1555,1556],{"class":47},"    await",[41,1558,1559],{"class":51}," mg.messages.",[41,1561,1329],{"class":61},[41,1563,1564],{"class":51},"(process.env.",[41,1566,1567],{"class":83},"MAILGUN_DOMAIN",[41,1569,1570],{"class":51},", data);\n",[41,1572,1573],{"class":43,"line":674},[41,1574,600],{"class":51},[14,1576,1577],{},"With these, every time the signup form is submitted successfully, a welcome email will be sent to the user's provided email address.",[400,1579,1580],{},"html pre.shiki code .sDUX4, html code.shiki .sDUX4{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sHTXl, html code.shiki .sHTXl{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .sKA9v, html code.shiki .sKA9v{--shiki-default:#6A737D;--shiki-dark:#6A737D}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .scLti, html code.shiki .scLti{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sWKip, html code.shiki .sWKip{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sf26o, html code.shiki .sf26o{--shiki-default:#E36209;--shiki-dark:#FFAB70}html pre.shiki code .swLay, html code.shiki .swLay{--shiki-default:#005CC5;--shiki-dark:#79B8FF}",{"title":36,"searchDepth":75,"depth":75,"links":1582},[],"Have you found yourself in a situation where you needed to send emails from your Nuxt application? With Nuxt's server and Mailgun, sending emails directly from your Nuxt 3 app becomes a breeze",{"slug":1585},"sending-email-from-your-nuxt-3-app-with-mailgun","/articles/sending-email-from-your-nuxt-3-app-with-mailgun","2023-10-14T00:00:00.000Z",{"title":418,"description":1583},"articles/sending-email-from-your-nuxt-3-app-with-mailgun",1741530921258]